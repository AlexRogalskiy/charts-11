#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# deploy PulsarBroker only when `components.broker and operator.enabled` is true
{{- if and .Values.components.broker .Values.broker.operator.enabled }}
apiVersion: pulsar.streamnative.io/v1alpha1
kind: PulsarBroker
metadata:
  # no need to add component to name here as operator will add 
  name: "{{ template "pulsar.fullname" . }}"
  namespace: {{ template "pulsar.namespace" . }}
  annotations:
    "cloud.streamnative.io/enable-config-prefix": "false"
    "cloud.streamnative.io/enable-pod-labels-update": "enabled"
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.broker.component }}
spec:
  zkServers: "{{ template "pulsar.zookeeper.connect" . }}{{ .Values.metadataPrefix }}"
  replicas: {{ .Values.broker.replicaCount }}
  image: "{{ .Values.images.broker.repository }}:{{ .Values.images.broker.tag }}"
  imagePullPolicy: {{ .Values.images.broker.pullPolicy }}
  pod:
    serviceAccountName: {{ template "pulsar.broker.serviceAccount" . }}
    labels:
      {{- include "pulsar.template.labels" . | nindent 6 }}
      component: {{ .Values.broker.component }}
      {{- if .Values.broker.kop.enabled }}
      sidecar.istio.io/inject: "true"
      {{- end }}
    annotations:
      {{- if .Values.monitoring.datadog }}
      {{- include "pulsar.broker.datadog.annotation" . | nindent 6 }}
      {{- end }}
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.broker.ports.http }}"
{{- with .Values.broker.annotations }}
{{ toYaml . | indent 6 }}
{{- end }}
    {{- if and .Values.affinity.anti_affinity .Values.broker.affinity.anti_affinity }}
    affinity:
      podAntiAffinity:
        {{ .Values.broker.affinity.type }}:
          {{ if eq .Values.broker.affinity.type "requiredDuringSchedulingIgnoredDuringExecution" }}
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                    - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                    - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                    - {{ .Values.broker.component }}
            topologyKey: "kubernetes.io/hostname"
          {{ else }}
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - "{{ template "pulsar.name" . }}"
                  - key: "release"
                    operator: In
                    values:
                      - {{ .Release.Name }}
                  - key: "component"
                    operator: In
                    values:
                      - {{ .Values.broker.component }}
              topologyKey: "kubernetes.io/hostname"
          {{ end }}
    {{- end }}
    vars:
    - name: PULSAR_PREFIX_OIDCTokenAudienceID
      valueFrom:
          secretKeyRef:
            name: {{ template "pulsar.vault-secret-key-name" . }}
            key: PULSAR_PREFIX_OIDCTokenAudienceID
    - name: brokerClientAuthenticationParameters
      valueFrom:
          secretKeyRef:
            name: {{ template "pulsar.vault-secret-key-name" . }}
            key: brokerClientAuthenticationParameters
    {{- if .Values.broker.externalDNSName }}
    - name: POD_NAME
      valueFrom:
          fieldRef:
            fieldPath: metadata.name
    - name: PULSAR_PREFIX_kafkaAdvertisedListeners
      value: PLAINTEXT://$(POD_NAME).{{ .Values.broker.externalDNSName }}:9092,SSL://$(POD_NAME).{{ .Values.broker.externalDNSName }}:9093
    {{- end }}
    # not support envFrom currently
    #envFrom:
    #- secretRef:
    #    name: {{ template "pulsar.vault-secret-key-name" . }}
    {{- if .Values.broker.resources }}
    resources:
      requests:
        memory: "{{ .Values.broker.resources.requests.memory }}"
        cpu: "{{ .Values.broker.resources.requests.cpu }}"
    {{- end }}
    {{- if .Values.broker.securityContext }}
    securityContext: {{ .Values.broker.securityContext }}
    {{- end }}
    {{- if .Values.broker.nodeSelector }}
    nodeSelector:
{{ toYaml .Values.broker.nodeSelector | indent 6 }}
    {{- end }}
    {{- if .Values.broker.tolerations }}
    tolerations:
{{ toYaml .Values.broker.tolerations | indent 6 }}
    {{- end }}
    terminationGracePeriodSeconds: {{ .Values.broker.gracePeriod }}
    jvmOptions:
      extraOptions: []
      memoryOptions:
        - {{ .Values.broker.configData.PULSAR_MEM }}
      gcOptions:
        - {{ .Values.broker.configData.PULSAR_GC }}
      gcLoggingOptions: []
  {{- if .Values.broker.kop.enabled }}
  istio:
    enabled: true
    gateway:
      create: true
      selector:
        istio: {{ quote .Values.broker.istio.gateway.selector.istio }}
  {{- end }}
  config:
    {{- if .Values.broker.functionmesh.enabled }}
    function:
      enabled: true
      mesh:
        builtinConnectorsRef:
          name: builtin-connectors
      type: FunctionMesh
      {{- end }}
    advertisedDomain: {{ quote .Values.broker.advertisedDomain }}
    {{- if .Values.broker.kop.enabled }}
    protocolHandlers:
      kop:
        enabled: true
        tls:
          certSecretName: {{ .Values.broker.kop.tls.certSecretName }}
          enabled: true
          passwordSecretRef:
            key: {{ .Values.broker.kop.tls.passwordSecretRef.key }}
            name: {{ .Values.broker.kop.tls.passwordSecretRef.name }}
    {{- end }}
    tls:
      certSecretName: tls
      enabled: false
    custom:
{{ toYaml .Values.broker.configData | indent 6 }}
      # It's not recommended to modify below settings
      authenticationProviders: "io.streamnative.pulsar.broker.authentication.AuthenticationProviderOIDCToken"
      authorizationProvider: "org.apache.pulsar.broker.authorization.PulsarAuthorizationProvider"
      PULSAR_PREFIX_vaultHost: {{ template "pulsar.vault.url" . }}
      PULSAR_PREFIX_OIDCPublicKeyPath: "{{ template "pulsar.vault.url" . }}/v1/identity/oidc/.well-known/keys"
      superUserRoles: "admin"
      brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationToken"
      # inject to env
      # add 4 client id: serviceAccount,superServiceAccount,user,superUser
      #PULSAR_PREFIX_OIDCTokenAudienceID: "SJLn7xHKSqILNh3EjB4ouwVoG8,K3tAXjUAKkp43TzVbZD26xXhpl,ZZYDJeZtPSBoNQhjmatUvadCm6,LXpnmDkYm3yP43RLnBnapwlkPI"
      #brokerClientAuthenticationParameters: '{"role":"super-service-account","roleId":"d4136e3e-5564-dcea-ef5d-14ece0329128","secretId":"28e59360-6d96-ef4c-f7fe-ad52e4bb5e5f","vaultHost": "http://test-vault-active.default:8200"}' 
{{ (.Files.Glob "conf/broker/log4j2.yaml").AsConfig | indent 4 }}
{{- end }}